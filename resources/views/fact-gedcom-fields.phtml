<?php

declare(strict_types=1);

namespace Jefferson49\Webtrees\Module\RepositoryHierarchy;

use Fisharebest\Webtrees\Elements\AbstractXrefElement;
use Fisharebest\Webtrees\Elements\XrefMedia;
use Fisharebest\Webtrees\Elements\XrefSource;
use Fisharebest\Webtrees\Gedcom;
use Fisharebest\Webtrees\GedcomRecord;
use Fisharebest\Webtrees\Registry;
use Fisharebest\Webtrees\Session;
use Fisharebest\Webtrees\Services\ModuleService;
use Fisharebest\Webtrees\Source;
use Fisharebest\Webtrees\Tree;
use Jefferson49\Webtrees\Internationalization\MoreI18N;

/**
 * @var string $gedcom
 * @var string $parent e.g. "INDI:BIRT:DATE"
 * @var Tree   $tree
 */

$module_service = new ModuleService();
$repository_hierarchy = $module_service->findByName(RepositoryHierarchy::activeModuleName());
$showSourceCitationIcon = false;

//If copy source citation icon shall be shown, check if individual or family view and wether editable
if (boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_COPY_PASTE_CITATIONS, '0'))) {

    if ((   Session::get($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_NAME) === RepositoryHierarchy::PAGE_NAME_INDIVIDUAL)
            && (Session::get($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_TREE) === $tree->name())
            && Session::has($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_PARAMETER))
    {
        $individual = Registry::individualFactory()->make(Session::get($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_PARAMETER), $tree);

        if($individual !== null) {
            $showSourceCitationIcon = $individual->canEdit();
        }
    }
    elseif ((Session::get($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_NAME) === RepositoryHierarchy::PAGE_NAME_FAMILY)
            && (Session::get($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_TREE) === $tree->name())
            && Session::has($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_PARAMETER))
    {
        $family = Registry::familyFactory()->make(Session::get($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_PARAMETER), $tree);

        if($family !== null) {
            $showSourceCitationIcon = $family->canEdit();
        }
    }
}

$hierarchy = explode(':', $parent);

// Merge CONT records onto their parent line.
$gedcom_with_cont = $gedcom;
$gedcom = preg_replace('/\n\d CONT ?/', "\r", $gedcom);

preg_match_all('/^(\d+) (\w+) ?(.*)/m', $gedcom, $matches);
[, $levels, $tags, $values] = $matches;
$levels   = array_map(static fn (string $x): int => (int) $x, $levels);
$keys     = array_keys($levels);
$elements = [];

$private_level = PHP_INT_MAX;

foreach ($keys as $key) {
    $hierarchy[$levels[$key]] = $tags[$key];
    $full_tag                 = implode(':', array_slice($hierarchy, 0, 1 + $levels[$key]));
    $elements[$key]           = Registry::elementFactory()->make($full_tag);

    if ($elements[$key] instanceof AbstractXrefElement && preg_match('/^@(' . Gedcom::REGEX_XREF . ')@$/', $values[$key], $match) === 1) {
        $record = Registry::gedcomRecordFactory()->make($match[1], $tree);

        if ($record instanceof GedcomRecord && !$record->canShow()) {
            $private_level = min($private_level, $levels[$key]);
        }
    }

    if ($levels[$key] >= $private_level) {
        $values[$key] = '';
    } else {
        $private_level = PHP_INT_MAX;
    }
}

?>

<?php if ($elements[0] instanceof XrefSource && preg_match('/^@(' . Gedcom::REGEX_XREF . ')@$/', $values[0], $match) === 1) : ?>
    <?php $source = Registry::sourceFactory()->make($match[1], $tree) ?>
    <?php if ($source instanceof Source) : ?>
        <?php $id = Registry::idFactory()->id() ?>
        <?php $expanded = $tree->getPreference('EXPAND_SOURCES') === '1' ?>
        <div>
            <button type="button" class="btn btn-text p-0" href="#<?= e($id) ?>" data-bs-toggle="collapse" aria-controls="<?= e($id) ?>" aria-expanded="<?= $expanded ? 'true' : 'false' ?>">
                <?= view('icons/expand') ?>
                <?= view('icons/collapse') ?>
            </button>

            <?php $label = '<span class="label">' . MoreI18N::xlate('Source') . '</span>' ?>
            <?php $value = '<span class="field" dir="auto"><a href="' . e($source->url()) . '">' . $source->fullName() . '</a></span>' ?>
            <?= MoreI18N::xlate('%1$s: %2$s', $label, $value) ?>

            <?php //Additionally show icons to copy/delete/move source citation?>
            <?php if (      boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_COPY_PASTE_CITATIONS, '0'))
                        or  boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_DELETE_CITATIONS, '0'))
                        or  boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_SORT_CITATIONS, '0')) )  : ?>

                <?= view(RepositoryHierarchy::viewsNamespace() . '::copy-delete-move-source-citations', ['tree' => $tree, 'parent' => $parent, 'gedcom' => $gedcom_with_cont,]) ?>
            <?php endif ?>
        </div>

        <div id="<?= e($id) ?>" class="ps-4 collapse <?= $expanded ? 'show' : '' ?>">

            <?php //Additionally show source facts within citations?>
            <?= view(RepositoryHierarchy::viewsNamespace() . '::source-facts-within-citation', ['tree' => $tree, 'source' => $source]) ?>

            <?php array_shift($keys) ?>
            <?php foreach ($keys as $key) : ?>
                <?php if ($values[$key] !== '') : ?>
                    <?php if ($elements[$key] instanceof XrefMedia && preg_match('/^@(' . Gedcom::REGEX_XREF . ')@$/', $values[$key], $match) === 1) : ?>
                        <?php if(!boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_SHOW_MEDIA_AFTER_CITATIONS, '0'))) : ?>
                            <?= view(RepositoryHierarchy::viewsNamespace() . '::jc-simple-media-display', ['xref' => $match[1], 'tree' => $tree]); ?>
                        <?php endif ?>
                    <?php else : ?>
                        <?= $elements[$key]->labelValue(strtr($values[$key], ["\r" => "\n"]), $tree) ?>
                    <?php endif ?>
                <?php endif ?>
            <?php endforeach ?>
        </div>

        <?php //Additionally show media objects after source citation?>
        <?php if (boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_SHOW_MEDIA_AFTER_CITATIONS, '0'))) : ?>
            <?php foreach ($keys as $key) : ?>
                <?php if ($values[$key] !== '') : ?>
                    <?php if ($elements[$key] instanceof XrefMedia && preg_match('/^@(' . Gedcom::REGEX_XREF . ')@$/', $values[$key], $match) === 1) : ?>
                        <?= view(RepositoryHierarchy::viewsNamespace() . '::jc-simple-media-display', ['xref' => $match[1], 'tree' => $tree]); ?>
                    <?php endif ?>
                <?php endif ?>
            <?php endforeach ?>
        <?php endif ?>
    <?php endif ?>
<?php elseif ($elements[0] instanceof XrefMedia && preg_match('/^@(' . Gedcom::REGEX_XREF . ')@$/', $values[0], $match) === 1) : ?>
    <?= view(RepositoryHierarchy::viewsNamespace() . '::jc-simple-media-display', ['xref' => $match[1], 'tree' => $tree]); ?>
<?php else : ?>
    <?php foreach ($keys as $key) : ?>
        <?php if ($values[$key] !== '') : ?>
            <?= $elements[$key]->labelValue(strtr($values[$key], ["\r" => "\n"]), $tree) ?>
        <?php endif ?>
    <?php endforeach ?>
<?php endif ?>
