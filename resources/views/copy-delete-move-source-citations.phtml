<?php

declare(strict_types=1);

namespace Jefferson49\Webtrees\Module\RepositoryHierarchy;

use Fisharebest\Webtrees\Registry;
use Fisharebest\Webtrees\Services\IndividualFactsService;
use Fisharebest\Webtrees\Services\LinkedRecordService;
use Fisharebest\Webtrees\Services\ModuleService;
use Fisharebest\Webtrees\Session;
use Fisharebest\Webtrees\Tree;
use Illuminate\Support\Collection;

/**
 * @var string $gedcom
 * @var string $parent e.g. "INDI:BIRT:DATE"
 * @var Tree   $tree
 */

$module_service = new ModuleService();
$repository_hierarchy = $module_service->findByName(RepositoryHierarchy::activeModuleName());

$linked_record_service = new LinkedRecordService();
$individual_facts_service = new IndividualFactsService($linked_record_service, $module_service);
$can_edit = false;

//Check if individual or family view and wether editable
//Decide whether to show copy source citation icon

if ((Session::get($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_NAME) === RepositoryHierarchy::PAGE_NAME_INDIVIDUAL)
	&& (Session::get($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_TREE) === $tree->name())
	&& Session::has($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_PARAMETER)) 
{
    $individual  = Registry::individualFactory()->make(Session::get($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_PARAMETER), $tree);
    $can_edit = $individual->canEdit();
    $showCopySourceCitationIcon = $can_edit && boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_COPY_PASTE_CITATIONS, '0'));
    $xref = $individual->xref();
    $facts = $individual->facts();
    $family_facts = $individual_facts_service->familyFacts($individual, new Collection);
    $facts = $facts->merge($family_facts);
    $xref_type = 'INDI';
}
elseif ((Session::get($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_NAME) === RepositoryHierarchy::PAGE_NAME_FAMILY) 
    && (Session::get($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_TREE) === $tree->name()) 
    && Session::has($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_PARAMETER))
{
    $family  = Registry::familyFactory()->make(Session::get($repository_hierarchy->name() . RepositoryHierarchy::LAST_PAGE_PARAMETER), $tree);
    $can_edit = $family->canEdit();
    $showCopySourceCitationIcon = $can_edit && boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_COPY_PASTE_CITATIONS, '0'));
    $xref = $family->xref();
    $facts = $family->facts();
    $xref_type = 'FAM';
}
else {
    $showCopySourceCitationIcon = false;
    $facts = [];
    $xref = '';
    $xref_type = '';
}

//Check that count of occurances in facts is only one
//Also evaluate position of source citation within all citations in the fact

$fact_id = '';
$count_citations_in_different_facts = 0;
$position = 0;
$matches = [];

foreach ($facts as $fact) {

    if (str_starts_with($parent, $fact->tag())
        && str_contains($fact->gedcom(), $gedcom)) {

        $fact_id = $fact->id();
        $count_citations_in_different_facts++;

        //reg exp from: fact-sources.phtml
        preg_match_all('/\n(2 SOUR\b.*(?:\n[^2].*)*)/', $fact->gedcom(), $matches, PREG_PATTERN_ORDER);
    }
}

$citation_position = 0;

if (isset($matches[1])) {
    $matched_citations =  $matches[1];
    $number_of_citations = sizeof($matched_citations);

    for ($i = 0; $i < sizeof($matched_citations); $i++) {

        if ($gedcom === $matched_citations[$i]) {
            $citation_position = $i;
        }
    }
}
else{
    $number_of_citations = 0;
}

//Decide whether to show icons to delete or move up/down citations
$showDeleteSourceCitationIcon = boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_DELETE_CITATIONS, '0'))
    && $can_edit && ($count_citations_in_different_facts === 1);

$showMoveUpSourceCitationIcon = boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_SORT_CITATIONS, '0'))
    && $can_edit && ($count_citations_in_different_facts === 1) && ($number_of_citations > 1) && ($citation_position > 0);

$showMoveDownSourceCitationIcon = boolval($repository_hierarchy->getPreference(RepositoryHierarchy::PREF_ENABLE_SORT_CITATIONS, '0'))
    && $can_edit && ($count_citations_in_different_facts === 1) && ($number_of_citations > 1) && ($citation_position < $number_of_citations -1);

?>

<?php if ($showCopySourceCitationIcon) : ?>
    <?= view(RepositoryHierarchy::viewsNamespace() . '::edit/icon-source-citation-copy', [
        'tree'              => $tree,
        'xref'              => $xref,
        'gedcom'            => $gedcom,
        ]) ?>
<?php endif ?>
<?php if ($showDeleteSourceCitationIcon) : ?>
    <?= view(RepositoryHierarchy::viewsNamespace() . '::edit/icon-source-citation-delete', [
        'tree'              => $tree,
        'xref'              => $xref,
        'fact_id'           => $fact_id,
        'xref_type'         => $xref_type,
        'gedcom'            => $gedcom,
        ]) ?>
<?php endif ?>
<?php if ($showMoveUpSourceCitationIcon) : ?>
    <?= view(RepositoryHierarchy::viewsNamespace() . '::edit/icon-source-citation-move', [
        'tree'              => $tree,
        'xref'              => $xref,
        'fact_id'           => $fact_id,
        'xref_type'         => $xref_type,
        'matched_citations' => $matched_citations,
        'old_position'      => $citation_position,
        'new_position'      => $citation_position - 1,
        ]) ?>
<?php endif ?>
<?php if ($showMoveDownSourceCitationIcon) : ?>
    <?= view(RepositoryHierarchy::viewsNamespace() . '::edit/icon-source-citation-move', [
        'tree'              => $tree,
        'xref'              => $xref,
        'fact_id'           => $fact_id,
        'xref_type'         => $xref_type,
        'matched_citations' => $matched_citations,
        'old_position'      => $citation_position,
        'new_position'      => $citation_position + 1,
        ]) ?>
<?php endif ?>
